version: '3.8'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: northwind
    ports:
      - "5432:5432"
    volumes:
      - ./northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
    networks:
      - etl-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - etl-network
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    networks:
      - etl-network
  connect:
    image: debezium/connect:2.3
    depends_on:
      - kafka
      - postgres
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-group
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_status
    ports:
      - "8083:8083"
    networks:
      - etl-network
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    networks:
      - etl-network
  spark-master:
    image: bitnami/spark:3.4.0
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8080:8080"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./spark_job.py:/app/spark_job.py
      - /app/spark-checkpoint:/app/spark-checkpoint
    networks:
      - etl-network
  spark-worker:
    image: bitnami/spark:3.4.0
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    networks:
      - etl-network
  grafana:
    image: grafana/grafana:8.5.0
    ports:
      - "3000:3000"
    networks:
      - etl-network
networks:
  etl-network:
    driver: bridge